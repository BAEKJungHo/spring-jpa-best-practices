{
  "message": "입력값이 올바르지 않습니다.",
  "code": "???",
  "status": 400,
  "errors": [
    {
      "field": "org.springframework.orm.jpa.vendor.HibernateJpaDialect",
      "value": "HibernateJpaDialect.java",
      "reason": "convertHibernateAccessException"
    },
    {
      "field": "org.springframework.orm.jpa.vendor.HibernateJpaDialect",
      "value": "HibernateJpaDialect.java",
      "reason": "translateExceptionIfPossible"
    },
    {
      "field": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
      "value": "AbstractEntityManagerFactoryBean.java",
      "reason": "translateExceptionIfPossible"
    },
    {
      "field": "org.springframework.dao.support.ChainedPersistenceExceptionTranslator",
      "value": "ChainedPersistenceExceptionTranslator.java",
      "reason": "translateExceptionIfPossible"
    },
    {
      "field": "org.springframework.dao.support.DataAccessUtils",
      "value": "DataAccessUtils.java",
      "reason": "translateIfNecessary"
    },
    {
      "field": "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor",
      "value": "PersistenceExceptionTranslationInterceptor.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor",
      "value": "CrudMethodMetadataPostProcessor.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.aop.interceptor.ExposeInvocationInterceptor",
      "value": "ExposeInvocationInterceptor.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor",
      "value": "SurroundingTransactionDetectorMethodInterceptor.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.aop.framework.JdkDynamicAopProxy",
      "value": "JdkDynamicAopProxy.java",
      "reason": "invoke"
    },
    {
      "field": "com.sun.proxy.$Proxy96",
      "value": null,
      "reason": "save"
    },
    {
      "field": "com.cheese.springjpa.Account.AccountService",
      "value": "AccountService.java",
      "reason": "create"
    },
    {
      "field": "com.cheese.springjpa.Account.AccountService$$FastClassBySpringCGLIB$$c3d60ff3",
      "value": "<generated>",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.cglib.proxy.MethodProxy",
      "value": "MethodProxy.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation",
      "value": "CglibAopProxy.java",
      "reason": "invokeJoinpoint"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.transaction.interceptor.TransactionInterceptor$1",
      "value": "TransactionInterceptor.java",
      "reason": "proceedWithInvocation"
    },
    {
      "field": "org.springframework.transaction.interceptor.TransactionAspectSupport",
      "value": "TransactionAspectSupport.java",
      "reason": "invokeWithinTransaction"
    },
    {
      "field": "org.springframework.transaction.interceptor.TransactionInterceptor",
      "value": "TransactionInterceptor.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.aop.framework.ReflectiveMethodInvocation",
      "value": "ReflectiveMethodInvocation.java",
      "reason": "proceed"
    },
    {
      "field": "org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor",
      "value": "CglibAopProxy.java",
      "reason": "intercept"
    },
    {
      "field": "com.cheese.springjpa.Account.AccountService$$EnhancerBySpringCGLIB$$aa5d0cff",
      "value": "<generated>",
      "reason": "create"
    },
    {
      "field": "com.cheese.springjpa.Account.AccountController",
      "value": "AccountController.java",
      "reason": "signUp"
    },
    {
      "field": "sun.reflect.NativeMethodAccessorImpl",
      "value": "NativeMethodAccessorImpl.java",
      "reason": "invoke0"
    },
    {
      "field": "sun.reflect.NativeMethodAccessorImpl",
      "value": "NativeMethodAccessorImpl.java",
      "reason": "invoke"
    },
    {
      "field": "sun.reflect.DelegatingMethodAccessorImpl",
      "value": "DelegatingMethodAccessorImpl.java",
      "reason": "invoke"
    },
    {
      "field": "java.lang.reflect.Method",
      "value": "Method.java",
      "reason": "invoke"
    },
    {
      "field": "org.springframework.web.method.support.InvocableHandlerMethod",
      "value": "InvocableHandlerMethod.java",
      "reason": "doInvoke"
    },
    {
      "field": "org.springframework.web.method.support.InvocableHandlerMethod",
      "value": "InvocableHandlerMethod.java",
      "reason": "invokeForRequest"
    },
    {
      "field": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod",
      "value": "ServletInvocableHandlerMethod.java",
      "reason": "invokeAndHandle"
    },
    {
      "field": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "value": "RequestMappingHandlerAdapter.java",
      "reason": "invokeHandlerMethod"
    },
    {
      "field": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "value": "RequestMappingHandlerAdapter.java",
      "reason": "handleInternal"
    },
    {
      "field": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "value": "AbstractHandlerMethodAdapter.java",
      "reason": "handle"
    },
    {
      "field": "org.springframework.web.servlet.DispatcherServlet",
      "value": "DispatcherServlet.java",
      "reason": "doDispatch"
    },
    {
      "field": "org.springframework.web.servlet.DispatcherServlet",
      "value": "DispatcherServlet.java",
      "reason": "doService"
    },
    {
      "field": "org.springframework.web.servlet.FrameworkServlet",
      "value": "FrameworkServlet.java",
      "reason": "processRequest"
    },
    {
      "field": "org.springframework.web.servlet.FrameworkServlet",
      "value": "FrameworkServlet.java",
      "reason": "doPost"
    },
    {
      "field": "javax.servlet.http.HttpServlet",
      "value": "HttpServlet.java",
      "reason": "service"
    },
    {
      "field": "org.springframework.web.servlet.FrameworkServlet",
      "value": "FrameworkServlet.java",
      "reason": "service"
    },
    {
      "field": "javax.servlet.http.HttpServlet",
      "value": "HttpServlet.java",
      "reason": "service"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.tomcat.websocket.server.WsFilter",
      "value": "WsFilter.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.springframework.web.filter.RequestContextFilter",
      "value": "RequestContextFilter.java",
      "reason": "doFilterInternal"
    },
    {
      "field": "org.springframework.web.filter.OncePerRequestFilter",
      "value": "OncePerRequestFilter.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.springframework.web.filter.HttpPutFormContentFilter",
      "value": "HttpPutFormContentFilter.java",
      "reason": "doFilterInternal"
    },
    {
      "field": "org.springframework.web.filter.OncePerRequestFilter",
      "value": "OncePerRequestFilter.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.springframework.web.filter.HiddenHttpMethodFilter",
      "value": "HiddenHttpMethodFilter.java",
      "reason": "doFilterInternal"
    },
    {
      "field": "org.springframework.web.filter.OncePerRequestFilter",
      "value": "OncePerRequestFilter.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.springframework.web.filter.CharacterEncodingFilter",
      "value": "CharacterEncodingFilter.java",
      "reason": "doFilterInternal"
    },
    {
      "field": "org.springframework.web.filter.OncePerRequestFilter",
      "value": "OncePerRequestFilter.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "internalDoFilter"
    },
    {
      "field": "org.apache.catalina.core.ApplicationFilterChain",
      "value": "ApplicationFilterChain.java",
      "reason": "doFilter"
    },
    {
      "field": "org.apache.catalina.core.StandardWrapperValve",
      "value": "StandardWrapperValve.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.core.StandardContextValve",
      "value": "StandardContextValve.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.authenticator.AuthenticatorBase",
      "value": "AuthenticatorBase.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.core.StandardHostValve",
      "value": "StandardHostValve.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.valves.ErrorReportValve",
      "value": "ErrorReportValve.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.core.StandardEngineValve",
      "value": "StandardEngineValve.java",
      "reason": "invoke"
    },
    {
      "field": "org.apache.catalina.connector.CoyoteAdapter",
      "value": "CoyoteAdapter.java",
      "reason": "service"
    },
    {
      "field": "org.apache.coyote.http11.Http11Processor",
      "value": "Http11Processor.java",
      "reason": "service"
    },
    {
      "field": "org.apache.coyote.AbstractProcessorLight",
      "value": "AbstractProcessorLight.java",
      "reason": "process"
    },
    {
      "field": "org.apache.coyote.AbstractProtocol$ConnectionHandler",
      "value": "AbstractProtocol.java",
      "reason": "process"
    },
    {
      "field": "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor",
      "value": "NioEndpoint.java",
      "reason": "doRun"
    },
    {
      "field": "org.apache.tomcat.util.net.SocketProcessorBase",
      "value": "SocketProcessorBase.java",
      "reason": "run"
    },
    {
      "field": "java.util.concurrent.ThreadPoolExecutor",
      "value": "ThreadPoolExecutor.java",
      "reason": "runWorker"
    },
    {
      "field": "java.util.concurrent.ThreadPoolExecutor$Worker",
      "value": "ThreadPoolExecutor.java",
      "reason": "run"
    },
    {
      "field": "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable",
      "value": "TaskThread.java",
      "reason": "run"
    },
    {
      "field": "java.lang.Thread",
      "value": "Thread.java",
      "reason": "run"
    }
  ]
}
